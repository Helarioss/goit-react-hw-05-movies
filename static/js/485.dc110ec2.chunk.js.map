{"version":3,"file":"static/js/485.dc110ec2.chunk.js","mappings":"iUAGaA,EAAkBC,EAAAA,GAAAA,IAAH,wDAKfC,EAAQD,EAAAA,GAAAA,IAAH,qFAMLE,EAAcF,EAAAA,GAAAA,IAAH,wCAIXG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,uO,SCJVK,EACL,OADKA,EAEF,UAFEA,EAGD,WAHCA,EAID,WAyFZ,EA/DqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAY,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAE9C,EA5B+B,SAAAC,GAC/B,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAST,GAArC,eAAOY,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEH,EAAUb,GADZ,mBAGwBiB,EAAAA,EAAAA,IAAaT,GAHrC,OAGUE,EAHV,OAIIC,EAASD,GACTG,EAAUb,GALd,gDAOIe,EAAS,EAAD,IACRF,EAAUb,GARd,0DADc,uBAAC,WAAD,wBAYdkB,KACC,CAACV,IAEG,CAAEE,MAAAA,EAAOE,OAAAA,EAAQE,MAAAA,GAQEK,CAAkBlB,GAApCS,EAAR,EAAQA,MAAOE,EAAf,EAAeA,OAEPQ,EACNV,EADMU,MAAOC,EACbX,EADaW,YAAaC,EAC1BZ,EAD0BY,SAAUC,EACpCb,EADoCa,OAAQC,EAC5Cd,EAD4Cc,aAAcC,EAC1Df,EAD0De,aAG5D,OACE,iCACE,UAAC3B,EAAD,CAAY4B,GAAIrB,EAAhB,WACE,SAAC,MAAD,CAA2BsB,KAAM,KADnC,aAKCf,IAAWZ,IAAkB,SAAC4B,EAAA,EAAD,IAE7BhB,IAAWZ,IAAmB,SAAC6B,EAAA,QAAD,IAE9BjB,IAAWZ,IACV,4BACE,UAACN,EAAD,YACE,SAACE,EAAD,CACEkC,IAAG,0CAAqCT,GACxCU,IAAG,UAAKX,EAAL,gBAEL,UAACvB,EAAD,YACE,0BACGuB,EADH,KACYI,EAAaQ,MAAM,EAAG,GADlC,QAGA,wCAA+B,GAAfP,EAAhB,QACA,sCACA,uBAAIH,KACJ,oCACA,uBAAIC,EAAOU,KAAI,qBAAGC,QAAiBC,KAAK,eAG5C,mBACA,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMT,GAAG,OAAOpB,MAAO,CAAEC,KAAMF,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMqB,GAAG,UAAUpB,MAAO,CAAEC,KAAMF,GAAlC,2BAKJ,mBACA,SAAC,EAAA+B,SAAD,CAAUC,UAAU,SAACT,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,c,gFCjGCU,E,QAAa3C,GAAAA,GAAH,iH,SCIvB,EAJqB,WACnB,OAAO,SAAC2C,EAAD,sC,0MCDHC,EAAU,mCAEhBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,8FACjBD,IAAAA,IAAA,oCAAuCD,IADtB,uCACkCG,KAAKC,SADvC,2CAAH,qDAIjB1B,EAAY,mCAAG,WAAMT,GAAN,iFACZgC,IAAAA,IAAA,iBAAoBhC,EAApB,oBAAkC+B,IADtB,uCACkCG,MADlC,2CAAH,sDAIZE,EAAc,mCAAG,WAAMpC,GAAN,iFACdgC,IAAAA,IAAA,iBAAoBhC,EAApB,4BAA0C+B,IAD5B,uCACwCG,KACjEC,SAFyB,2CAAH,sDAKdE,EAAW,mCAAG,WAAMrC,GAAN,iFACXgC,IAAAA,IAAA,iBAAoBhC,EAApB,4BAA0C+B,IAD/B,uCAC2CG,KAAKI,MADhD,2CAAH,sDAIXC,EAAY,mCAAG,WAAMC,GAAN,iFACZR,IAAAA,IAAA,8BAAiCQ,EAAjC,oBAAkDT,IADtC,uCAEvBG,KAAKC,SAFkB,2CAAH","sources":["Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.jsx","Pages/NotFoundPage/NotFoundPage.styled.js","Pages/NotFoundPage/NotFoundPage.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BaseInformation = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  max-width: 100%;\n  max-height: 500px;\n`;\n\nexport const Description = styled.div`\n  width: 100%;\n`;\n\nexport const ButtonBack = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  margin-bottom: 20px;\n\n  color: black;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n\n  svg {\n    margin-right: 7px;\n  }\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/api';\n\nimport { BsFillArrowLeftCircleFill } from 'react-icons/bs';\nimport NotFoundPage from 'Pages/NotFoundPage';\nimport { Spinner } from 'components/Spinner';\nimport {\n  BaseInformation,\n  ButtonBack,\n  Description,\n  Image,\n} from './MovieDetails.styled';\n\nexport const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport const useFetchMovieById = id => {\n  const [movie, setMovie] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      setStatus(STATUS.PENDING);\n      try {\n        const movie = await getMovieById(id);\n        setMovie(movie);\n        setStatus(STATUS.RESOLVED);\n      } catch (error) {\n        setError(error);\n        setStatus(STATUS.REJECTED);\n      }\n    }\n    fetchMovies();\n  }, [id]);\n\n  return { movie, status, error };\n};\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const prevLocation = location?.state?.from ?? '/';\n\n  const { movie, status } = useFetchMovieById(movieId);\n\n  const { title, poster_path, overview, genres, release_date, vote_average } =\n    movie;\n\n  return (\n    <>\n      <ButtonBack to={prevLocation}>\n        <BsFillArrowLeftCircleFill size={24} />\n        Go back\n      </ButtonBack>\n\n      {status === STATUS.PENDING && <Spinner />}\n\n      {status === STATUS.REJECTED && <NotFoundPage />}\n\n      {status === STATUS.RESOLVED && (\n        <div>\n          <BaseInformation>\n            <Image\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={`${title}'s poster`}\n            ></Image>\n            <Description>\n              <h1>\n                {title} ({release_date.slice(0, 4)})\n              </h1>\n              <p>User Score: {vote_average * 10}%</p>\n              <h2>Overview</h2>\n              <p>{overview}</p>\n              <h2>Genres</h2>\n              <p>{genres.map(({ name }) => name).join(', ')}</p>\n            </Description>\n          </BaseInformation>\n          <hr />\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={{ from: prevLocation }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: prevLocation }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <hr />\n          <Suspense fallback={<Spinner />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const ErrorTitle = styled.h1`\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { ErrorTitle } from './NotFoundPage.styled';\n\nconst NotFoundPage = () => {\n  return <ErrorTitle>Sorry. Page not found</ErrorTitle>;\n};\n\nexport default NotFoundPage;\n","import axios from 'axios';\n\nconst API_KEY = '80dd5d087ca76f72d259ad6d0e54d71f';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  return (await axios.get(`/trending/all/day?api_key=${API_KEY}`)).data.results;\n};\n\nexport const getMovieById = async id => {\n  return (await axios.get(`/movie/${id}?api_key=${API_KEY}`)).data;\n};\n\nexport const getReviewsById = async id => {\n  return (await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`)).data\n    .results;\n};\n\nexport const getCastById = async id => {\n  return (await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`)).data.cast;\n};\n\nexport const searchMovies = async query => {\n  return (await axios.get(`/search/movie?query=${query}&api_key=${API_KEY}`))\n    .data.results;\n};\n"],"names":["BaseInformation","styled","Image","Description","ButtonBack","Link","STATUS","movieId","useParams","location","useLocation","prevLocation","state","from","id","useState","movie","setMovie","status","setStatus","error","setError","useEffect","getMovieById","fetchMovies","useFetchMovieById","title","poster_path","overview","genres","release_date","vote_average","to","size","Spinner","NotFoundPage","src","alt","slice","map","name","join","Suspense","fallback","ErrorTitle","API_KEY","axios","getTrendingMovies","data","results","getReviewsById","getCastById","cast","searchMovies","query"],"sourceRoot":""}