{"version":3,"file":"static/js/933.4c300b34.chunk.js","mappings":"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","sources":["Pages/Movies/Movies.styled.js","Pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const SearchInput = styled.input`\n  box-sizing: border-box;\n  height: 32px;\n  padding: 5px 10px;\n  width: 20%;\n\n  font-size: 16px;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: transparent;\n  border: none;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  margin-top: 30px;\n\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 30px 20px;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  max-width: 100%;\n  height: 340px;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.h3`\n  margin: 0;\n  margin-top: 12px;\n  font-size: 20px;\n`;\n\nexport const MovieLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'services/api';\nimport { FaSearch } from 'react-icons/fa';\nimport {\n  Form,\n  List,\n  MovieLink,\n  MovieTitle,\n  Poster,\n  SearchButton,\n  SearchInput,\n} from './Movies.styled';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nexport const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst useSearchMovies = query => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      if (query) {\n        setStatus(STATUS.PENDING);\n        try {\n          const movies = await searchMovies(query);\n          setMovies(movies);\n          setStatus(STATUS.RESOLVED);\n        } catch (error) {\n          setError(error);\n          setStatus(STATUS.REJECTED);\n        }\n      }\n    }\n    fetchMovies();\n  }, [query]);\n\n  return { movies, status, error };\n};\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  const { movies, status, error } = useSearchMovies(query);\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    const query = event.target.elements.search.value.trim();\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        <SearchInput type=\"text\" name=\"search\" />\n        <SearchButton type=\"submit\">\n          <FaSearch size={20} />\n        </SearchButton>\n      </Form>\n\n      {status === STATUS.PENDING && <Spinner />}\n\n      {status === STATUS.REJECTED && <h1>Error: {error.message}</h1>}\n\n      {status === STATUS.RESOLVED && (\n        <List>\n          {movies.map(({ title, name, poster_path, id }) => (\n            <li key={id}>\n              <MovieLink\n                to={`/movies/${id}`}\n                state={{ from: `/movies?query=${query}` }}\n              >\n                <Poster\n                  src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                  alt={`${title}'s poster`}\n                ></Poster>\n                <MovieTitle>{title ?? name}</MovieTitle>\n              </MovieLink>\n            </li>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '80dd5d087ca76f72d259ad6d0e54d71f';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  return (await axios.get(`/trending/all/day?api_key=${API_KEY}`)).data.results;\n};\n\nexport const getMovieById = async id => {\n  return (await axios.get(`/movie/${id}?api_key=${API_KEY}`)).data;\n};\n\nexport const getReviewsById = async id => {\n  return (await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`)).data\n    .results;\n};\n\nexport const getCastById = async id => {\n  return (await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`)).data.cast;\n};\n\nexport const searchMovies = async query => {\n  return (await axios.get(`/search/movie?query=${query}&api_key=${API_KEY}`))\n    .data.results;\n};\n"],"names":["Form","styled","SearchInput","SearchButton","List","Poster","MovieTitle","MovieLink","Link","STATUS","useSearchParams","searchParams","setSearchParams","query","get","useState","movies","setMovies","status","setStatus","error","setError","useEffect","searchMovies","fetchMovies","useSearchMovies","onSubmit","event","preventDefault","target","elements","search","value","trim","type","name","size","Spinner","message","map","title","poster_path","id","to","state","from","src","alt","API_KEY","axios","getTrendingMovies","data","results","getMovieById","getReviewsById","getCastById","cast"],"sourceRoot":""}