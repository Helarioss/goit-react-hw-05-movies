{"version":3,"file":"static/js/678.37f92d1f.chunk.js","mappings":"kSAGaA,EAAQC,EAAAA,GAAAA,GAAH,qFAMLC,EAAOD,EAAAA,GAAAA,GAAH,+KASJE,EAASF,EAAAA,GAAAA,IAAH,uGAONG,EAAaH,EAAAA,GAAAA,GAAH,+EAMVI,GAAYJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,oH,SC1BTM,EACL,OADKA,EAEF,UAFEA,EAGD,WAHCA,EAID,WAuDZ,EA5Ba,WACX,MAzBqB,WACrB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAASD,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEH,EAAUL,GADZ,mBAGyBS,EAAAA,EAAAA,MAHzB,OAGUP,EAHV,OAIIC,EAAUD,GACVG,EAAUL,GALd,gDAOIO,EAAS,EAAD,IACRF,EAAUL,GARd,0DADc,uBAAC,WAAD,wBAadU,KACC,IAEI,CAAER,OAAAA,EAAQE,OAAAA,EAAQE,MAAAA,GAISK,GAA1BT,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,OAAQE,EAAxB,EAAwBA,MACxB,OACE,iCACE,SAACb,EAAD,6BACCW,IAAWJ,IAAkB,SAACY,EAAA,EAAD,IAE7BR,IAAWJ,IAAmB,oCAAYM,EAAMO,WAEhDT,IAAWJ,IACV,SAACL,EAAD,UACGO,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,KAAMC,EAA7B,EAA6BA,GAA7B,OACV,yBACE,UAACpB,EAAD,CAAWqB,GAAE,kBAAaD,GAA1B,WACE,SAACtB,EAAD,CACEwB,IAAG,0CAAqCJ,GACxCK,IAAG,UAAKN,EAAL,gBAEL,SAAClB,EAAD,iBAAakB,QAAb,IAAaA,EAAAA,EAASE,QANjBC,a,0MC9CfI,EAAU,mCAEhBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMd,EAAiB,mCAAG,8FACjBc,IAAAA,IAAA,oCAAuCD,IADtB,uCACkCE,KAAKC,SADvC,2CAAH,qDAIjBC,EAAY,mCAAG,WAAMR,GAAN,iFACZK,IAAAA,IAAA,iBAAoBL,EAApB,oBAAkCI,IADtB,uCACkCE,MADlC,2CAAH,sDAIZG,EAAc,mCAAG,WAAMT,GAAN,iFACdK,IAAAA,IAAA,iBAAoBL,EAApB,4BAA0CI,IAD5B,uCACwCE,KACjEC,SAFyB,2CAAH,sDAKdG,EAAW,mCAAG,WAAMV,GAAN,iFACXK,IAAAA,IAAA,iBAAoBL,EAApB,4BAA0CI,IAD/B,uCAC2CE,KAAKK,MADhD,2CAAH,sDAIXC,EAAY,mCAAG,WAAMC,GAAN,iFACZR,IAAAA,IAAA,8BAAiCQ,EAAjC,oBAAkDT,IADtC,uCAEvBE,KAAKC,SAFkB,2CAAH","sources":["Pages/Home/Home.styled.js","Pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin: 0;\n  margin-bottom: 30px;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 30px 20px;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  max-width: 100%;\n  height: 340px;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.h3`\n  margin: 0;\n  margin-top: 12px;\n  font-size: 20px;\n`;\n\nexport const MovieLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n","import { Spinner } from 'components/Spinner';\nimport { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/api';\nimport { List, MovieLink, Poster, MovieTitle, Title } from './Home.styled';\n\nexport const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst useFetchMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      setStatus(STATUS.PENDING);\n      try {\n        const movies = await getTrendingMovies();\n        setMovies(movies);\n        setStatus(STATUS.RESOLVED);\n      } catch (error) {\n        setError(error);\n        setStatus(STATUS.REJECTED);\n      }\n    }\n\n    fetchMovies();\n  }, []);\n\n  return { movies, status, error };\n};\n\nconst Home = () => {\n  const { movies, status, error } = useFetchMovies();\n  return (\n    <>\n      <Title>Trending today</Title>\n      {status === STATUS.PENDING && <Spinner />}\n\n      {status === STATUS.REJECTED && <h1>Error: {error.message}</h1>}\n\n      {status === STATUS.RESOLVED && (\n        <List>\n          {movies.map(({ title, poster_path, name, id }) => (\n            <li key={id}>\n              <MovieLink to={`/movies/${id}`}>\n                <Poster\n                  src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                  alt={`${title}'s poster`}\n                ></Poster>\n                <MovieTitle>{title ?? name}</MovieTitle>\n              </MovieLink>\n            </li>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '80dd5d087ca76f72d259ad6d0e54d71f';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  return (await axios.get(`/trending/all/day?api_key=${API_KEY}`)).data.results;\n};\n\nexport const getMovieById = async id => {\n  return (await axios.get(`/movie/${id}?api_key=${API_KEY}`)).data;\n};\n\nexport const getReviewsById = async id => {\n  return (await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`)).data\n    .results;\n};\n\nexport const getCastById = async id => {\n  return (await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`)).data.cast;\n};\n\nexport const searchMovies = async query => {\n  return (await axios.get(`/search/movie?query=${query}&api_key=${API_KEY}`))\n    .data.results;\n};\n"],"names":["Title","styled","List","Poster","MovieTitle","MovieLink","Link","STATUS","useState","movies","setMovies","status","setStatus","error","setError","useEffect","getTrendingMovies","fetchMovies","useFetchMovies","Spinner","message","map","title","poster_path","name","id","to","src","alt","API_KEY","axios","data","results","getMovieById","getReviewsById","getCastById","cast","searchMovies","query"],"sourceRoot":""}